rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Audio tracks - read for authenticated users, write for admins only
    match /tracks/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin();
    }
    
    // Track images - read for authenticated users, write for admins only
    match /track_images/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin();
    }
    
    // Category images - read for authenticated users, write for admins only
    match /category_images/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin();
    }
    
    // User uploads (if needed in future)
    match /user_uploads/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             firestore.exists(/databases/(default)/documents/admins/$(request.auth.uid)) &&
             firestore.get(/databases/(default)/documents/admins/$(request.auth.uid)).data.isActive == true;
    }
  }
}
